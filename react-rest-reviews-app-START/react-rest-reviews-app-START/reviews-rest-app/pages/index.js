import Head from "next/head";
import Container from "@mui/material/Container";
import Snackbar from "@mui/material/Snackbar";
// Component imports
import NavBar from "../components/NavBar";
import AdaptationReviewCard from "../components/AdaptationReviewCard";
import { useState, useEffect, useSyncExternalStore } from "react";
import { getReviews } from "../utils/api/reviews";
import FormAdaptationReview from "../components/FormAdaptationReview";

export default function Home() {
  const [reviews, setReviews] = useState([]);
  const [open, setOpen] = useState(false);
  const [snackMessage, setSnackMessage] = useState("");

  // When the page loads or "mounts", the code block executes
  // try to keep the code within this block to a minimum to avoid errors
  useEffect(() => {
    loadAllReviews();
  }, []);

  const openSnackMessage = (message) => {
    setSnackMessage(message);
    setOpen(true);
  };

  const handleClose = (event, reason) => {
    if (reason === "clickaway") {
      return;
    }

    setOpen(false);
  };
  const loadAllReviews = () => {
    // gettting it from the backend
    getReviews().then((reviewsData) => {
      // setting it on the front end
      setReviews(reviewsData);
      openSnackMessage("data fetched successfully");
    });
  };

  return (
    <div>
      <Head>
        <title>Adaptation Reviews.</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NavBar title={"Adaptation Reviews"} />
      <main>
        <Container maxWidth="md">
          {/* this is where the form was  */}
          <FormAdaptationReview reviews={reviews} setReviews={setReviews} />
          {/* This is where the box was for load all reviews */}
          {reviews.map((adaptation, index) => {
            return (
              <AdaptationReviewCard
                key={adaptation.id}
                id={adaptation.id}
                title={adaptation.title}
                comment={adaptation.comment}
                rating={adaptation.rating}
                reviews={reviews}
                setReviews={setReviews}
                openSnackMessage={openSnackMessage}
              />
            );
          })}
          <Snackbar
            open={open}
            autoHideDuration={6000}
            onClose={handleClose}
            message={snackMessage}
          />
        </Container>
      </main>
    </div>
  );
}
